// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieCapsule.Models;

namespace MovieCapsule.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieCapsule.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 11,
                            Name = "History"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Musical"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 19,
                            Name = "War"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Western"
                        });
                });

            modelBuilder.Entity("MovieCapsule.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 7.4m,
                            Title = "John Wick",
                            Year = 2014
                        },
                        new
                        {
                            Id = 2,
                            Rating = 8.8m,
                            Title = "The Lord of the Rings: The Fellowship of the Ring",
                            Year = 2001
                        },
                        new
                        {
                            Id = 3,
                            Rating = 8.6m,
                            Title = "Interstellar",
                            Year = 2014
                        },
                        new
                        {
                            Id = 4,
                            Rating = 7.2m,
                            Title = "Free Guy",
                            Year = 2021
                        },
                        new
                        {
                            Id = 5,
                            Rating = 8.4m,
                            Title = "Oldboy",
                            Year = 2003
                        },
                        new
                        {
                            Id = 6,
                            Rating = 8.6m,
                            Title = "Parasite",
                            Year = 2019
                        },
                        new
                        {
                            Id = 7,
                            Rating = 8.4m,
                            Title = "Like Stars On Earth",
                            Year = 2007
                        },
                        new
                        {
                            Id = 8,
                            Rating = 7.9m,
                            Title = "Arrival",
                            Year = 2016
                        },
                        new
                        {
                            Id = 9,
                            Rating = 8.6m,
                            Title = "Life Is Beautiful",
                            Year = 1997
                        },
                        new
                        {
                            Id = 10,
                            Rating = 8.1m,
                            Title = "Persona",
                            Year = 1966
                        },
                        new
                        {
                            Id = 11,
                            Rating = 7.1m,
                            Title = "Cars",
                            Year = 2006
                        },
                        new
                        {
                            Id = 12,
                            Rating = 8.1m,
                            Title = "Gone Girl",
                            Year = 2014
                        });
                });

            modelBuilder.Entity("MovieGenre", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenre");

                    b.HasData(
                        new
                        {
                            GenreId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            GenreId = 6,
                            MovieId = 1
                        },
                        new
                        {
                            GenreId = 18,
                            MovieId = 1
                        },
                        new
                        {
                            GenreId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            GenreId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 2
                        },
                        new
                        {
                            GenreId = 1,
                            MovieId = 3
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 3
                        },
                        new
                        {
                            GenreId = 16,
                            MovieId = 3
                        },
                        new
                        {
                            GenreId = 1,
                            MovieId = 4
                        },
                        new
                        {
                            GenreId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            GenreId = 5,
                            MovieId = 4
                        },
                        new
                        {
                            GenreId = 2,
                            MovieId = 5
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 5
                        },
                        new
                        {
                            GenreId = 14,
                            MovieId = 5
                        },
                        new
                        {
                            GenreId = 5,
                            MovieId = 6
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 6
                        },
                        new
                        {
                            GenreId = 18,
                            MovieId = 6
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 7
                        },
                        new
                        {
                            GenreId = 9,
                            MovieId = 7
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 8
                        },
                        new
                        {
                            GenreId = 16,
                            MovieId = 8
                        },
                        new
                        {
                            GenreId = 5,
                            MovieId = 9
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 9
                        },
                        new
                        {
                            GenreId = 15,
                            MovieId = 9
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 10
                        },
                        new
                        {
                            GenreId = 18,
                            MovieId = 10
                        },
                        new
                        {
                            GenreId = 1,
                            MovieId = 11
                        },
                        new
                        {
                            GenreId = 3,
                            MovieId = 11
                        },
                        new
                        {
                            GenreId = 5,
                            MovieId = 11
                        },
                        new
                        {
                            GenreId = 8,
                            MovieId = 12
                        },
                        new
                        {
                            GenreId = 14,
                            MovieId = 12
                        },
                        new
                        {
                            GenreId = 18,
                            MovieId = 12
                        });
                });

            modelBuilder.Entity("MovieGenre", b =>
                {
                    b.HasOne("MovieCapsule.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieCapsule.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
